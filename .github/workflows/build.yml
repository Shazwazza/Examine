name: Examine Build

on:
  workflow_dispatch:
  push:
    branches:
      - 'master'
      - 'dev'
      - 'release/*'
    tags: 
      - 'v*'
  pull_request:
    branches:
      - 'master'
      - 'dev'
      - 'release/*'

jobs:
  build:

    runs-on: ubuntu-latest

    env:
      Solution_File: src/Examine.sln
      Test_Proj: src/Examine.Test/Examine.Test.csproj
      Configuration: Release
      
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Create copyright value
      run: |
        $Copyright = "Copyright " + [char]0x00A9 + " Shannon Deminick " + (Get-Date).year
        echo ("Copyright=" + $Copyright) >> $Env:GITHUB_ENV
      shell: pwsh
      
    - name: Setup dotnet
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: |
          6.0.x
          8.0.x

    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.9
      with:
        versionSpec: '5.x'

    - name: Determine Version
      uses: gittools/actions/gitversion/execute@v0.9.9
    
    - name: Install dependencies
      run: dotnet restore ${{ env.Solution_File }}
    
    - name: Build
      run: dotnet build ${{ env.Solution_File }} --configuration ${{ env.Configuration }} --no-restore
    
    - name: Test
      run: dotnet test "${{ env.Test_Proj }}" --no-build --verbosity normal --results-directory ${{ github.workspace }}/_TestResults  --logger "trx;logfilename=tests.trx" --filter "TestCategory!~Benchmarks"

    - name: Upload test results
      uses: actions/upload-artifact@v4  # upload test results
      if: success() || failure()        # run this step even if previous step failed
      with:
        name: examine-test-results
        path:  ${{ github.workspace }}/_TestResults/tests.trx

    - name: Pack
      if: success()
      # This will do a rebuild
      run: |
        dotnet pack ${{ env.Solution_File }} \
          --configuration ${{ env.Configuration }} \
          --no-restore \
          -p:PackageVersion=${{ env.GitVersion_SemVer }} \
          -p:AssemblyVersion=${{ env.GitVersion_AssemblySemVer }} \
          -p:FileVersion=${{ env.GitVersion_AssemblySemFileVer }} \
          -p:InformationalVersion=${{ env.GitVersion_InformationalVersion }} \
          -p:ContinuousIntegrationBuild=true \
          -p:Copyright="${{ env.Copyright }}" \
          --output=${{ github.workspace }}/_NugetOutput

    - name: Upload artifacts
      uses: actions/upload-artifact@v4  # upload nuget
      if: success()
      with:
        name: examine-nuget-${{ env.GitVersion_SemVer }}
        path:  ${{ github.workspace }}/_NugetOutput/*.*
